//     barman 0.2.5
//     https://github.com/dfernandez79/barman
//     Copyright (c) 2013 Diego Fernandez
(function(){"use strict";function t(){function t(t){return t===void 0}function r(t){return"function"==typeof t}function e(t,r){return t?Object.prototype.hasOwnProperty.call(t,r):!1}function n(t){return t===Object(t)}function o(){var t={constructor:1};for(var r in t)if(e(t,r))return!1;return!0}function u(t,r,e){var n,o;if(null!==t)if(v&&t.forEach===v)t.forEach(r,e);else if(t.length===+t.length)for(n=0,o=t.length;o>n;n++)r.call(e,t[n],n,t);else C(t,r,e)}function a(t){return u(g.call(arguments,1),function(r){r&&u(r,function(r,e){t[e]=r})}),t}function c(t,r,e){return e&&t||(e={}),u(t,function(t,n){e[n]=r.call(this,t,n)},e),e}function i(){throw Error("This property was defined by multiple merged objects, override it with the proper implementation")}function s(){throw Error("An implementation is required")}function l(r,n){var o=e(this,n)?this[n]:void 0;return t(o)||o===r||o===s?r:r===s?o:i}function p(){var t={};return u(arguments,function(r){c(r,l,t)}),t}function f(){}function h(t){return t[E]=!0,t}function y(t){return n(t)&&t[E]===!0}function d(t){return f.extend.apply(t,g.call(arguments,1))}function _(){return new F(g.call(arguments))}var m=Array.prototype,v=m.forEach,g=m.slice,w=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"],C=o()?function(t,r,n){var o,u;for(var a in t)r.call(n,t[a],a,t);for(o=0,u=w.length;u>o;o++)e(t,w[o])&&r.call(n,t[w[o]],w[o],t)}:function(t,r,e){for(var n in t)r.call(e,t[n],n,t)},S=e(Object,"create")?Object.create:function(t){function r(){}return r.prototype=t,new r},b="*_callSuper_tmp*";f.__super__=f.prototype,f.prototype._applySuper=function(r,n){var o,u=e(this,b)?this[b]:this.constructor.__super__,a=u[r];if(delete this[b],!r)throw Error("The name of the method to call is required");if(t(a))throw new ReferenceError("__super__ doesn't define a method named "+r);try{return this[b]=u.constructor.__super__,o=t(n)?a.apply(this):a.apply(this,n)}finally{delete this[b]}},f.prototype._callSuper=function(t){return this._applySuper(t,g.call(arguments,1))};var E="*classFactory*",x=h({createClass:function(n,o,u){var c=a(S(n.prototype),o);if(e(c,"constructor")){if(!r(c.constructor))throw new TypeError("The constructor property must be a function")}else c.constructor=function(){n.apply(this,arguments)};var i=a(c.constructor,u,{__super__:n.prototype});return t(c._callSuper)&&(c._callSuper=f.prototype._callSuper),t(c._applySuper)&&(c._applySuper=f.prototype._applySuper),i.prototype=c,i.extend=f.extend,i}});f.extend=function(){var t=g.call(arguments),r=y(t[0])?t.shift():x;return t.unshift(this),r.createClass.apply(r,t)};var O={create:function(){return f.extend.apply(f,arguments)}},j=O.create({defaultCreateClass:function(){return x.createClass.apply(x,arguments)},createClass:s});h(j.prototype);var F=j.extend({constructor:function(t){this.traits=t},createClass:function(t,r,e){var n=p.apply(null,this.traits),o=this.defaultCreateClass(t,a(n,r),e);return this._assertNoConflict(o.prototype),o},_assertNoConflict:function(t){var r=[];if(u(t,function(t,e){t===i&&r.push(e)}),r.length>0)throw Error("There is a merge conflict for the following properties: "+r.sort().join(","))}});return{clone:S,extend:a,merge:p,conflict:i,Nil:f,markAsClassFactory:h,isClassFactory:y,AbstractClassFactory:j,defaultClassFactory:x,Class:O,subclassOf:d,required:s,include:_}}"function"==typeof define&&define.amd?define([],t):"undefined"!=typeof module&&module.exports?module.exports=t():window.barman=t()})();
//@ sourceMappingURL=https://raw.github.com/dfernandez79/barman/v0.2.5/dist/barman.min.js.map